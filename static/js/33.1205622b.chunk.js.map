{"version":3,"file":"static/js/33.1205622b.chunk.js","mappings":"gUAEaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAY,wMAUvBE,GAAUF,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAY,wJAQtBG,EAAYH,EAAAA,EAAAA,IAAU,4DAItBI,EAAQJ,EAAAA,EAAAA,IAAU,+CAGlBK,EAAOL,EAAAA,EAAAA,EAAQ,4CAGfM,EAAON,EAAAA,EAAAA,KAAW,kEAIlBO,EAAcP,EAAAA,EAAAA,KAAW,oFAKzBQ,EAAUR,EAAAA,EAAAA,IAAU,+CAGpBS,EAAOT,EAAAA,EAAAA,GAAS,8E,SCxBd,SAASU,IAAgB,IAAD,QAC/BC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAAK,eAAzCC,EAAS,KAAEC,EAAY,KACtBC,GAAaC,EAAAA,EAAAA,KAAbD,SAEFE,EAAmC,QAAvB,EAAiB,QAAjB,EAAGT,EAASU,aAAK,aAAd,EAAgBC,YAAI,QAAI,IACrCC,GAAYC,EAAAA,EAAAA,UAAS,CAAC,QAASX,EAASK,IAAS,uBAAE,4GAClCO,EAAAA,EAAAA,IAAYZ,EAASK,GAAU,KAAD,WAA7CQ,EAAI,EAAJA,KACRT,EAAaS,GAAM,4CAFbH,QAKR,IAAKP,EACH,OAAO,KAET,IACEW,EAOEX,EAPFW,YACAC,EAMEZ,EANFY,MACAC,EAKEb,EALFa,eACAC,EAIEd,EAJFc,aACAC,EAGEf,EAHFe,aACAC,EAEEhB,EAFFgB,SACAC,EACEjB,EADFiB,OAEF,OACE,4BACE,SAAClC,EAAQ,CAACmC,GAAId,EAAa,SACX,OAAbF,EAAoB,iCAAU,YAEhCK,GACCY,EAAAA,GAAAA,MAAY,0DACbnB,IACC,UAACb,EAAS,YACR,SAACC,EAAK,CAACgC,IA5BE,mCA4BcT,EAAaU,IAAKT,KACzC,4BACE,0BACGC,EAAe,KAAGC,EAAaQ,MAAM,EAAG,GAAG,OAE7CL,EAAOM,KAAI,WAAWC,GAAK,IAAbC,EAAI,EAAJA,KAAI,OACjB,SAACnC,EAAI,UAAcmC,GAARD,EAAoB,IAEhCT,EAAe,IACd,UAAC1B,EAAI,WACW,OAAba,EAAoB,0GAAuB,aAAa,IAAE,IAC1DwB,KAAKC,MAAqB,GAAfZ,GAAmB,OAGrB,KAAbC,IACC,UAAC3B,EAAI,WACW,OAAba,EAAoB,2BAAS,WAAY,KAC1C,SAACX,EAAW,UAAEyB,cAMxB,UAACxB,EAAO,YACN,SAACF,EAAI,UACW,OAAbY,EACG,sHACA,4BAEN,2BACE,SAACT,EAAI,WACH,SAACP,EAAO,CAACgC,GAAG,OAAOb,MAAO,CAAEC,KAAoB,QAAhB,EAAEX,EAASU,aAAK,aAAd,EAAgBC,MAAO,SACzC,OAAbJ,EAAoB,8FAAqB,YAG9C,SAACT,EAAI,WACH,SAACP,EAAO,CAACgC,GAAG,UAAUb,MAAO,CAAEC,KAAoB,QAAhB,EAAEX,EAASU,aAAK,aAAd,EAAgBC,MAAO,SAC5C,OAAbJ,EAAoB,6CAAY,qBAKzC,SAAC,KAAM,MAGb,C","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  margin-top: 10px;\n  margin-left: 10px;\n  color: #959794;\n  text-decoration-color: rgba(233, 50, 46, 0.3);\n  &:hover {\n    color: #e9322e;\n  }\n`;\nexport const AddLink = styled(Link)`\n  color: #959794;\n  text-decoration-color: rgba(233, 50, 46, 0.3);\n  font-size: 16px;\n  &:hover {\n    color: #e9322e;\n  }\n`;\nexport const Container = styled.div`\n  padding: 40px;\n  display: flex;\n`;\nexport const Image = styled.img`\n  margin-right: 32px;\n`;\nexport const Text = styled.p`\n  font-size: 20px;\n`;\nexport const Info = styled.span`\n  font-size: 16px;\n  margin-right: 8px;\n`;\nexport const Description = styled.span`\n  display: block;\n  font-size: 16px;\n  margin-top: 10px;\n`;\nexport const AddInfo = styled.div`\n  padding-left: 40px;\n`;\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport { getInfoById } from 'API_Services/moviesdbAPI';\nimport { useQuery } from 'react-query';\nimport useLanguageContext from 'hooks/useLanguageContext';\nimport {\n  BackLink,\n  Container,\n  Image,\n  Text,\n  Info,\n  AddInfo,\n  AddLink,\n  Item,\n  Description,\n} from './MovieDetails.styled';\nexport default function MovieDetails() {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { language } = useLanguageContext();\n  const imageUrl = 'https://image.tmdb.org/t/p/w300/';\n  const backLinkHref = location.state?.from ?? '/';\n  const { isError } = useQuery(['movie', movieId, language], async () => {\n    const { data } = await getInfoById(movieId, language);\n    setMovieInfo(data);\n  });\n\n  if (!movieInfo) {\n    return null;\n  }\n  const {\n    poster_path,\n    title,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieInfo;\n  return (\n    <div>\n      <BackLink to={backLinkHref}>\n        {language === 'uk' ? 'Назад' : 'Go back'}\n      </BackLink>\n      {isError &&\n        toast.error('Something went wrong. Please, try again in few minutes')}\n      {movieInfo && (\n        <Container>\n          <Image src={imageUrl + poster_path} alt={title}></Image>\n          <div>\n            <h1>\n              {original_title} ({release_date.slice(0, 4)})\n            </h1>\n            {genres.map(({ name }, index) => (\n              <Info key={index}>{name}</Info>\n            ))}\n            {vote_average > 0 && (\n              <Text>\n                {language === 'uk' ? 'Оцінка користувача' : 'User score'}:{' '}\n                {Math.round(vote_average * 10)}%\n              </Text>\n            )}\n            {overview !== '' && (\n              <Text>\n                {language === 'uk' ? 'Опис' : 'Overview'}{' '}\n                <Description>{overview}</Description>\n              </Text>\n            )}\n          </div>\n        </Container>\n      )}\n      <AddInfo>\n        <Info>\n          {language === 'uk'\n            ? 'Додаткова інформація'\n            : 'Additional information'}\n        </Info>\n        <ul>\n          <Item>\n            <AddLink to=\"cast\" state={{ from: location.state?.from }}>\n              {language === 'uk' ? 'Акторський склад' : 'Cast'}\n            </AddLink>\n          </Item>\n          <Item>\n            <AddLink to=\"reviews\" state={{ from: location.state?.from }}>\n              {language === 'uk' ? 'Відгуки' : 'Reviews'}\n            </AddLink>\n          </Item>\n        </ul>\n      </AddInfo>\n      <Outlet />\n    </div>\n  );\n}\nMovieDetails.propTypes = {\n  movieInfo: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    original_title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n"],"names":["BackLink","styled","Link","AddLink","Container","Image","Text","Info","Description","AddInfo","Item","MovieDetails","location","useLocation","movieId","useParams","useState","movieInfo","setMovieInfo","language","useLanguageContext","backLinkHref","state","from","isError","useQuery","getInfoById","data","poster_path","title","original_title","release_date","vote_average","overview","genres","to","toast","src","alt","slice","map","index","name","Math","round"],"sourceRoot":""}