{"version":3,"file":"static/js/310.375d8e46.chunk.js","mappings":"0QAIaA,EAAYC,EAAAA,EAAAA,IAAU,0CAGtBC,EAAQD,EAAAA,EAAAA,MAAY,wQAcpBE,EAASF,EAAAA,EAAAA,OAAa,mLAStBG,GAAOH,EAAAA,EAAAA,GAAOI,EAAAA,IAAPJ,CAAgB,2CAGvBK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAY,oIAOzBO,EAAOP,EAAAA,EAAAA,GAAS,8E,SC5Bd,SAASQ,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAC9BC,EAAUF,EAAaG,IAAI,WACjC,GAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KACxB,GAA0BF,EAAAA,EAAAA,UAAS,MAAK,eAAjCG,EAAK,KAAEC,EAAQ,KAgBtB,OAfAC,EAAAA,EAAAA,YAAU,WACQ,OAAZP,GAAgC,KAAZA,IAGxBQ,EAAAA,EAAAA,IAAiBR,GACdS,MAAK,gBAAGC,EAAO,EAAPA,QAAO,OAAON,EAAUM,EAAQ,IACxCC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAM,GACnC,GAAG,CAACL,KASF,UAACf,EAAS,YACR,kBAAM2B,SARV,SAAyBC,GACvBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBjB,EAAgB,CAAEC,QAASe,EAAKE,SAASjB,QAAQkB,QACjDH,EAAKI,OACP,EAGoC,WAC9B,SAAChC,EAAK,CACJiC,KAAK,OACLC,KAAK,UACLC,YAAY,sBAEd,SAAClC,EAAM,WACL,SAACC,EAAI,SAGRgB,IAAS,uBAAG,2DACZF,EAAOoB,OAAS,IACf,wBACGpB,EAAOqB,KAAI,gBAAGC,EAAK,EAALA,MAAOC,EAAE,EAAFA,GAAE,OACtB,SAACjC,EAAI,WACH,SAACF,EAAU,CAACoC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMlC,GAAW,SACxD8B,KAFMC,EAIJ,QAMnB,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { BsSearch } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  padding: 40px;\n`;\nexport const Input = styled.input`\n  background-color: #19171a;\n  border-radius: 4px;\n  border: 2px solid #959794;\n  color: #959794;\n  font-size: 16px;\n  padding-left: 8px;\n  margin-bottom: 20px;\n  width: 250px;\n  height: 25px;\n  &:focus {\n    outline: none;\n  }\n`;\nexport const Button = styled.button`\n  height: 31px;\n  width: 32px;\n  color: #959794;\n  background-color: #19171a;\n  border: 2px solid #959794;\n  border-radius: 4px;\n  cursor: pointer;\n`;\nexport const Icon = styled(BsSearch)`\n  color: #e9322e;\n`;\nexport const StyledLink = styled(Link)`\n  color: #959794;\n  text-decoration-color: rgba(233, 50, 46, 0.3);\n  &:hover {\n    color: #e9322e;\n  }\n`;\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { getMoviesByQuery } from 'API_Services/moviesdbAPI';\nimport { useState, useEffect } from 'react';\nimport {\n  Container,\n  Input,\n  Button,\n  Icon,\n  StyledLink,\n  Item,\n} from './Movies.styled';\nexport default function Movies() {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const keyWord = searchParams.get('keyWord');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (keyWord === null || keyWord === '') {\n      return;\n    }\n    getMoviesByQuery(keyWord)\n      .then(({ results }) => setMovies(results))\n      .catch(error => setError(error));\n  }, [keyWord]);\n\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ keyWord: form.elements.keyWord.value });\n    form.reset();\n  }\n  return (\n    <Container>\n      <form onSubmit={onSubmitHandler}>\n        <Input\n          type=\"text\"\n          name=\"keyWord\"\n          placeholder=\"Enter movie name\"\n        ></Input>\n        <Button>\n          <Icon />\n        </Button>\n      </form>\n      {error && <p>Something went wrong. Please, try again in few minutes</p>}\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(({ title, id }) => (\n            <Item key={id}>\n              <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </StyledLink>\n            </Item>\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n}\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};\n"],"names":["Container","styled","Input","Button","Icon","BsSearch","StyledLink","Link","Item","Movies","location","useLocation","useSearchParams","searchParams","setSearchParams","keyWord","get","useState","movies","setMovies","error","setError","useEffect","getMoviesByQuery","then","results","catch","onSubmit","event","preventDefault","form","currentTarget","elements","value","reset","type","name","placeholder","length","map","title","id","to","state","from"],"sourceRoot":""}